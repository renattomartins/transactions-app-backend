swagger: '2.0'
info:
  description: This document describe the API for transactions App. A financial transactions tracking.
  version: 1.0.0
  title: Swagger Transactions App
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: renatto.martins@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: transações.io
basePath: /v1
tags:
  - name: base
    description: Initial endpoints
  - name: auth
    description: Authentication operations
  - name: accounts
    description: All your financial accounts
  - name: transactions
    description: All your financial transaction tracking
  - name: users
    description: Operations about user
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    get:
      summary: API Entry point
      tags:
        - base
      operationId: entryPoint
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/WelcomeResponsePayload'
  /health:
    get:
      summary: Healthcheck endpoint
      tags:
        - base
      operationId: health
      produces:
        - text/plain
      responses:
        '200':
          description: Ok
  /login:
    post:
      summary: Log in an user
      description: ''
      tags:
        - auth
      operationId: login
      parameters:
        - in: body
          name: authData
          description: Authentication data
          required: true
          schema:
            $ref: '#/definitions/AuthRequestPayload'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/AuthResponsePayload'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/400CodeResponsePayload'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/401CodeResponsePayload'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/404CodeResponsePayload'
        '422':
          description: 'Unprocessable Entity'
          schema:
            $ref: '#/definitions/422CodeResponsePayload'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/500CodeResponsePayload'
  /users:
    post:
      summary: Sign up new users
      description: ''
      tags:
        - users
      operationId: addUser
      parameters:
        - in: body
          name: user
          description: User object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/UserRequestPayload'
      responses:
        '201':
          description: Created
          headers:
            Location:
              type: string
              description: The location of the new User
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/400CodeResponsePayload'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/409CodeResponsePayload'
        '422':
          description: 'Unprocessable Entity'
          schema:
            $ref: '#/definitions/422CodeResponsePayload'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/500CodeResponsePayload'
  /accounts:
    get:
      summary: Get a list of accounts
      tags:
        - accounts
      operationId: getAccounts
      responses:
        '200':
          description: Ok
          headers:
            X-Total-Count:
              type: integer
              format: int32
              description: Number of accounts in response
          schema:
            $ref: '#/definitions/AccountList'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/500CodeResponsePayload'
    post:
      tags:
        - accounts
      summary: Add a new financial account
      description: ''
      operationId: addAccount
      parameters:
        - in: body
          name: account
          description: Account object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/AccountRequestPayload'
      responses:
        '201':
          description: Created
          headers:
            Location:
              type: string
              description: The location of the new Account
          schema:
            $ref: '#/definitions/Account'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/500CodeResponsePayload'
  '/accounts/{accountId}':
    get:
      tags:
        - accounts
      summary: Get a financial account
      operationId: getAccount
      parameters:
        - name: accountId
          in: path
          description: ID of account to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/400CodeResponsePayload'
        '404':
          description: Account not found
          schema:
            $ref: '#/definitions/404CodeResponsePayload'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/500CodeResponsePayload'
    put:
      tags:
        - accounts
      summary: Update an existing financial account
      operationId: updateAccount
      parameters:
        - name: accountId
          in: path
          description: ID of account to return
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Account object that needs to be uptaded
          required: true
          schema:
            $ref: '#/definitions/AccountRequestPayload'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/400CodeResponsePayload'
        '404':
          description: Account not found
          schema:
            $ref: '#/definitions/404CodeResponsePayload'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/500CodeResponsePayload'
    patch:
      tags:
        - accounts
      summary: Update parcially an existing financial account
      operationId: patchAccount
      parameters:
        - name: accountId
          in: path
          description: ID of account to return
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Account object that needs to be uptaded
          required: true
          schema:
            $ref: '#/definitions/AccountRequestPayload'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/400CodeResponsePayload'
        '404':
          description: Account not found
          schema:
            $ref: '#/definitions/404CodeResponsePayload'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/500CodeResponsePayload'
    delete:
      tags:
        - accounts
      summary: Delete an existing financial account
      operationId: deleteAccount
      parameters:
        - name: accountId
          in: path
          description: ID of account to return
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/400CodeResponsePayload'
        '404':
          description: Account not found
          schema:
            $ref: '#/definitions/404CodeResponsePayload'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/500CodeResponsePayload'
  '/accounts/{accountId}/transactions':
    get:
      summary: Get a list of transactions
      tags:
        - transactions
      operationId: getTransactions
      parameters:
        - name: accountId
          in: path
          description: ID of account to which the transaction belongs
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Ok
          headers:
            X-Total-Count:
              type: integer
              format: int32
              description: Number of transactions in response
          schema:
            $ref: '#/definitions/TransactionList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/400CodeResponsePayload'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/401CodeResponsePayload'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/403CodeResponsePayload'
        '404':
          description: Account not found
          schema:
            $ref: '#/definitions/404CodeResponsePayload'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/500CodeResponsePayload'
    post:
      tags:
        - transactions
      summary: Add a new transaction
      description: ''
      operationId: addTransaction
      parameters:
        - name: accountId
          in: path
          description: ID of account to which the transaction belongs
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Transaction object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      responses:
        '200':
          description: Ok
          headers:
            X-Total-Count:
              type: integer
              format: int32
              description: Number of transactions in response
        '405':
          description: Invalid input
  '/accounts/{accountId}/transactions/{transactionId}':
    get:
      tags:
        - transactions
      summary: Get a transaction
      operationId: getTransaction
      parameters:
        - name: accountId
          in: path
          description: ID of account to which the transaction belongs
          required: true
          type: integer
          format: int64
        - name: transactionId
          in: path
          description: ID of transaction to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid ID supplied
        '404':
          description: Transaction not found
    put:
      tags:
        - transactions
      summary: Update an existing transaction
      operationId: updateTransaction
      parameters:
        - name: accountId
          in: path
          description: ID of account to which the transaction belongs
          required: true
          type: integer
          format: int64
        - name: transactionId
          in: path
          description: ID of transaction to return
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Transaction object that needs to be uptaded
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid ID supplied
        '404':
          description: Transaction not found
        '405':
          description: Validation exception
    patch:
      tags:
        - transactions
      summary: Update parcially an existing transaction
      operationId: patchTransaction
      parameters:
        - name: accountId
          in: path
          description: ID of account to which the transaction belongs
          required: true
          type: integer
          format: int64
        - name: transactionId
          in: path
          description: ID of transaction to return
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Transaction object that needs to be uptaded
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid ID supplied
        '404':
          description: Transaction not found
        '405':
          description: Validation exception
    delete:
      tags:
        - transactions
      summary: Delete an existing transaction
      operationId: deleteTransaction
      parameters:
        - name: accountId
          in: path
          description: ID of account to which the transaction belongs
          required: true
          type: integer
          format: int64
        - name: transactionId
          in: path
          description: ID of transaction to return
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: No content
        '400':
          description: Invalid ID supplied
        '404':
          description: Transaction not found
definitions:
  WelcomeResponsePayload:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string
      version:
        type: string
        example: 1.0.0
      resources:
        $ref: '#/definitions/WelcomeResponseResources'
  WelcomeResponseResources:
    type: object
    properties:
      accountUrl:
        type: string
        example: http://api.transações.io/accounts
      transactionUrl:
        type: string
        example: http://api.transações.io/transactions
      userUrl:
        type: string
        example: http://api.transações.io/users
  500CodeResponsePayload:
    type: object
    properties:
      code:
        type: integer
        example: 500
      message:
        type: string
        example: 'Internal Server Error'
  400CodeResponsePayload:
    type: object
    properties:
      code:
        type: integer
        example: 400
      message:
        type: string
        example: 'Bad request'
  401CodeResponsePayload:
    type: object
    properties:
      code:
        type: integer
        example: 401
      message:
        type: string
        example: 'Unauthorized'
  403CodeResponsePayload:
    type: object
    properties:
      code:
        type: integer
        example: 403
      message:
        type: string
        example: 'Forbidden'
  404CodeResponsePayload:
    type: object
    properties:
      code:
        type: integer
        example: 404
      message:
        type: string
        example: 'Not found'
  409CodeResponsePayload:
    type: object
    properties:
      code:
        type: integer
        example: 409
      message:
        type: string
        example: 'Conflict'
      details:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: 'unique violation'
            value:
              type: string
              example: 'test@test.com'
            msg:
              type: string
              example: 'email must be unique'
            path:
              type: string
              example: 'email'
            location:
              type: string
              example: 'DB'
  422CodeResponsePayload:
    type: object
    properties:
      code:
        type: integer
        example: 422
      message:
        type: string
        example: 'Unprocessable Entity'
      details:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: 'field'
            msg:
              type: string
              example: 'invalid field'
            path:
              type: string
              example: 'email'
            location:
              type: string
              example: 'body'
  AuthRequestPayload:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        example: renato@transactions.app
      password:
        type: string
        example: 12345
  AuthResponsePayload:
    type: object
    required:
      - token
      - userId
    properties:
      token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      userId:
        type: string
        example: 1301
  UserRequestPayload:
    type: object
    required:
      - email
      - password
      - passwordVerification
    properties:
      email:
        type: string
        example: renato@transactions.app
      password:
        type: string
        example: 12345
      passwordVerification:
        type: string
        example: 12345
        description: passwordVerification and password fields must be equal.
  User:
    type: object
    required:
      - email
      - password
    properties:
      id:
        type: integer
        format: int64
        example: 1
      email:
        type: string
        example: renato@transactions.app
      createdAt:
        type: string
        example: '2021-07-16T08:14:34.606Z'
      updatedAt:
        type: string
        example: '2021-07-16T08:14:34.606Z'
  AccountRequestPayload:
    type: object
    required:
      - name
      - icon
      - type
      - initialBalance
      - activated
    properties:
      name:
        type: string
        example: Banco Inter
      icon:
        type: string
        example: icon-banco-inter
      description:
        type: string
        example: Conta principal de movimento.
      type:
        type: string
        enum:
          - CHECKING_ACCOUNT
          - SAVING_ACCOUNT
          - INVESTMENT_ACCOUNT
          - CREDIT_CARD
          - MONEY
          - OTHER
      initialBalance:
        type: number
        format: double
      activated:
        type: boolean
        example: true
  AccountList:
    type: array
    items:
      $ref: '#/definitions/Account'
  Account:
    type: object
    required:
      - name
      - icon
      - type
      - initialBalance
      - activated
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Banco Inter
      icon:
        type: string
        example: icon-banco-inter
      description:
        type: string
        example: Conta principal de movimento.
      type:
        type: string
        enum:
          - CHECKING_ACCOUNT
          - SAVING_ACCOUNT
          - INVESTMENT_ACCOUNT
          - CREDIT_CARD
          - MONEY
          - OTHER
      initialBalance:
        type: number
        format: double
      activated:
        type: boolean
        example: true
      createdAt:
        type: string
        example: '2023-04-04T08:14:34.606Z'
      updatedAt:
        type: string
        example: '2023-04-04T08:14:34.606Z'
  TransactionList:
    type: array
    items:
      $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    required:
      - description
      - amount
      - date
      - isIncome
      - isTransfer
      - accountId
    properties:
      id:
        type: integer
        format: int64
        example: 1254
      description:
        type: string
        example: Conta de água
      amount:
        type: number
        format: double
        example: 128.32
      date:
        type: string
        example: "2023-04-04T08:14:34.606Z"
      notes:
        type: string
        example: "Conta referente ao mês jul/2023"
      isIncome:
        type: boolean
      createdAt:
        type: string
        example: '2023-04-04T08:14:34.606Z'
      updatedAt:
        type: string
        example: '2023-04-04T08:14:34.606Z'
      AccountId:
        type: integer
        format: int64
        example: 4
externalDocs:
  description: Find out more about Transactions App
  url: 'https://transações.io'
  